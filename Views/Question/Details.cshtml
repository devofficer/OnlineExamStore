@model OnlineExam.Models.QuestionBank

@{
    ViewBag.Title = "Details";
}

<script type="text/x-mathjax-config">
        MathJax.Hub.Config({
            tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
    });
</script>
<script type="text/javascript" async
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML">
</script>

<h2>Details</h2>

<div>
    <h4>QuestionBank</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Decription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Decription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImagePath)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImagePath)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OptionA)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OptionA)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OptionB)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OptionB)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OptionC)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OptionC)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OptionD)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OptionD)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OptionE)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OptionE)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AnswerOption)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnswerOption)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AnswerDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnswerDescription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ModifiedOn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ModifiedOn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ModifiedBy)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
