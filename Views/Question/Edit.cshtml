@using OnlineExam.Infrastructure
@model OnlineExam.Models.QuestionBank


<style>
    body {
        font-family: Arial;
        font-size: 12px;
    }

    .radio, .radio-inline {
        padding-top: 0px;
        margin-top: 0;
        margin-bottom: 0;
    }

    .modal-dialog {
        position: absolute;
        top: 50% !important;
        -moz-transform: translate(0, -50%) !important;
        -o-transform: translate(0, -50%) !important;
        -ms-transform: translate(0, -50%) !important;
        -webkit-transform: translate(0, -50%) !important;
        transform: translate(0, -50%) !important;
        margin: auto 5%;
        width: 90%;
        height: 80%;
    }

    .modal-header {
        border-bottom: 1px solid #e5e5e5 !important;
        min-height: 16.4286px;
        padding-top: 0px;
        padding-bottom: 0px;
    }

    .modal-content {
        /*height: 100%;*/
        -ms-border-radius: 0;
        border-radius: 0;
        /*color: white;*/
        overflow: auto;
    }

    .modal-title {
        font-size: 2.2em;
        font-weight: 300;
        margin: 10px 0 0;
    }

    .modal-body {
        padding: 10px;
        position: relative;
    }

    .modal-footer {
        border-top: 1px solid #e5e5e5;
        margin-top: 15px;
        padding: 15px 10px 10px;
        text-align: right;
    }

    hr {
        margin-top: 5px;
        margin-bottom: 5px;
    }

    .cl-mcont .row {
        margin-top: 5px;
    }
</style>

<div class="page-head">
    <h3>Edit Question</h3>
    <ol class="breadcrumb">
        <li>@Html.ActionLink("Home", "Dashboard", "Account")</li>
        <li>
            <a href="@Url.Action("Index", "Question")" title="Question Bank">Question Bank</a>
        </li>
        <li class="active">Edit</li>
    </ol>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal  block-flat">
        <div class="row">
            <div class="col-md-12 text-right">
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.QuestionId)
                @Html.HiddenFor(x => x.DurationInSecond)
                <a href="#" class="btn btn-warning" title="Preview" id="btnPreview"><span class="glyphicon glyphicon-zoom-in"></span> &nbsp;Preview</a>
                <button type="submit" name="submit" value="Submit" class="btn btn-success">
                    <span class="fa fa-floppy-o"></span> &nbsp;Save
                </button>
                <a href="@Url.Action("Index", "Question")" class="btn btn-primary" title="Back to List"><span class="fa fa-long-arrow-left">&nbsp;Back</span></a>
            </div>
        </div>
        <div class="row">
            <hr />
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Decription, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.ValidationMessageFor(model => model.Decription)
                        @Html.TextAreaFor(model => model.Decription, new { @class = "form-control ckeditor" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div id="modal-content" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">×</button>
                            <h2 class="modal-title">Question Preview:</h2>
                        </div>
                        <div class="modal-body">
                            <div class="table-responsive">
                                <table class="table table-condensed table-bordered">
                                    <tr>
                                        <td><strong>Question Description:</strong></td>
                                        <td><span id="questionDescription"></span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Options:</strong></td>
                                        <td>
                                            <div class="form-group">
                                                <div class="col-md-3">
                                                    <strong>A.</strong>&nbsp;<span id="optionA"></span>
                                                </div>
                                                <div class="col-md-3"><strong>B.</strong>&nbsp;<span id="optionB"></span></div>
                                                <div class="col-md-3">
                                                    <strong>C.</strong>&nbsp;<span id="optionC"></span>
                                                </div>
                                                <div class="col-md-3">
                                                    <strong>D.</strong>&nbsp;<span id="optionD"></span>
                                                </div>
                                                @if (!string.IsNullOrWhiteSpace(@Model.OptionE))
                                                {
                                                    <div class="col-md-3">
                                                        <strong>E.</strong>&nbsp;<span id="optionE"></span>
                                                    </div>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Answer:</strong></td>
                                        <td>[<span id="answerOption"></span>] &nbsp;<span id="answerDescription"></span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Class Name:</strong> </td>
                                        <td><span id="className"></span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Exam Name:</strong> </td>
                                        <td><span id="examName"></span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Subject:</strong></td>
                                        <td> <span id="subject"></span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Question Format:</strong> </td>
                                        <td><span id="questionFormat"></span></td>
                                    </tr>
                                </table>

                            </div>
                        </div>
                        <div class="modal-footer">
                            <a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.ImagePath, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImagePath)
                    @Html.ValidationMessageFor(model => model.ImagePath)
                </div>
            </div>*@
        <fieldset>
            <legend>Answer Options:</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.OptionA, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.OptionA)
                    @Html.TextAreaFor(model => model.OptionA, new { @class = "form-control ckeditor" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OptionB, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.OptionB)
                    @Html.TextAreaFor(model => model.OptionB, new { @class = "form-control ckeditor" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OptionC, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.OptionC)
                    @Html.TextAreaFor(model => model.OptionC, new { @class = "form-control ckeditor" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OptionD, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.OptionD)
                    @Html.TextAreaFor(model => model.OptionD, new { @class = "form-control ckeditor" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OptionE, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.OptionE, new { @class = "form-control ckeditor" })
                    @*@Html.ValidationMessageFor(model => model.OptionE)*@
                </div>
            </div>

        </fieldset>
        <fieldset>
            <legend> Correct Answer & Explaination</legend>
            <div class="form-group ">
                @Html.LabelFor(model => model.AnswerOption, new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-inline">
                    @*@Html.EnumDropDownListFor(model => model.AnswerOption, "Select",new { @class = "form-control", @style = "width:10%;" })*@
                    @Html.DropDownListFor(model => model.AnswerOption, Enum.GetNames(typeof(Enums.QuestionOptions)).Select(e => new SelectListItem { Text = e }),
                   "Select", new { @class = "form-control", @style = "width:10%;" })

                    &nbsp;&nbsp;  @Html.LabelFor(model => model.IsActive, new { @class = "control-label" }) @Html.CheckBoxFor(model => model.IsActive, new { @class = "checkbox-inline" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AnswerDescription, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.AnswerDescription)
                    @Html.TextAreaFor(model => model.AnswerDescription, new { @class = "form-control ckeditor" })
                </div>
            </div>
        </fieldset>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            init();
            function init() {
                //debugger;
                var subject = $("#Subject").val();
                //alert(subject);
                //if (CKEDITOR) {
                //    if (CKEDITOR.instances.Decription) {
                //        // Switch to "source" view.
                //        CKEDITOR.instances.Decription.setMode('source');
                //        CKEDITOR.instances.OptionA.setMode('source');
                //        CKEDITOR.instances.OptionB.setMode('source');
                //        CKEDITOR.instances.OptionC.setMode('source');
                //        CKEDITOR.instances.OptionD.setMode('source');
                //        CKEDITOR.instances.OptionE.setMode('source');
                //    }
                //}

                //else {
                //    if (CKEDITOR) {
                //        if (CKEDITOR.instances.Decription) {
                //            // Switch to "wysiwyg" view and be notified on completion.
                //            CKEDITOR.instances.Decription.setMode('wysiwyg', function () { alert('wysiwyg mode loaded!'); });
                //            CKEDITOR.instances.OptionA.setMode('wysiwyg', function () { alert('wysiwyg mode loaded!'); });
                //            CKEDITOR.instances.OptionB.setMode('wysiwyg', function () { alert('wysiwyg mode loaded!'); });
                //            CKEDITOR.instances.OptionC.setMode('wysiwyg', function () { alert('wysiwyg mode loaded!'); });
                //            CKEDITOR.instances.OptionD.setMode('wysiwyg', function () { alert('wysiwyg mode loaded!'); });
                //            CKEDITOR.instances.OptionE.setMode('wysiwyg', function () { alert('wysiwyg mode loaded!'); });
                //        }
                //    }
                //}

            }

            $("#Subject").change(function () {
                init();
            });

            //$("#questionDescription").html(CKEDITOR.instances['Decription'].getData());
            //$('#modal-content').modal('show');
            //$('#modal-content').on('shown', function() {
            //    $("#txtname").focus();
            //});
            $('#btnPreview').click(function () {

                //alert(CKEDITOR.instances['AnswerDescription'].getData());
                $('#modal-content').modal({
                    show: true
                });
                $('#modal-content').on('shown.bs.modal', function () {
                    //$("#lblDescription").html(CKEDITOR.instances['Decription'].getData());

                    $("#questionDescription").html(CKEDITOR.instances['Decription'].getData());
                    $("#optionA").html(CKEDITOR.instances['OptionA'].getData()).addClass("math-tex");
                    $("#optionB").html(CKEDITOR.instances['OptionB'].getData());
                    $("#optionC").html(CKEDITOR.instances['OptionC'].getData());
                    $("#optionD").html(CKEDITOR.instances['OptionD'].getData());
                    $("#optionE").html(CKEDITOR.instances['OptionE'].getData());

                    //alert($("#ClassName option:selected").text());
                    $("#answerOption").text($("#AnswerOption option:selected").text());
                    $("#answerDescription").html(CKEDITOR.instances['AnswerDescription'].getData());
                    $("#className").text($("#ClassName option:selected").text());
                    $("#examName").text($("#ExamName option:selected").text());
                    $("#subject").text($("#Subject option:selected").text());
                    $("#questionFormat").text($("#QuestionFormat option:selected").text());
                });
            });
        });

        var roxyFileman = '/fileman/index.html';
        CKEDITOR.replace('Decription', {
            height: 300,
            filebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '?integration=ckeditor',
            removeDialogTabs: 'link:upload;image:upload'
        });

        CKEDITOR.replace('OptionA', {
            filebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '?integration=ckeditor',
            removeDialogTabs: 'link:upload;image:upload'
        });

        CKEDITOR.replace('OptionB', {
            filebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '?integration=ckeditor',
            removeDialogTabs: 'link:upload;image:upload'
        });
        CKEDITOR.replace('OptionC', {
            filebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '?integration=ckeditor',
            removeDialogTabs: 'link:upload;image:upload'
        });
        CKEDITOR.replace('OptionD', {
            filebrowserUploadfilebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '?integration=ckeditor',
            removeDialogTabs: 'link:upload;image:upload'
        });
        CKEDITOR.replace('OptionE', {
            filebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '?integration=ckeditor',
            removeDialogTabs: 'link:upload;image:upload'
        });
    </script>
}
