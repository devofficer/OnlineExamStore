@model OnlineExam.Models.QuestionPaperIndexViewModel
@using PagedList.Mvc;
<script type="text/javascript">
    window.MathJax = {
        showProcessingMessages: true,
        messageStyle: "none",
        tex2jax: {
            inlineMath: [['$', '$'], ["\\(", "\\)"]],
            processEscapes: true
        },
        "fast-preview": { disabled: true },
        CommonHTML: { linebreaks: { automatic: true } },
        "HTML-CSS": { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } },
        TeX: { noErrors: { disabled: true } },
        MathMenu: {
            styles: {
                ".MathJax_Menu": { "z-index": 2001 }
            }
        },
        AuthorInit: function () {
            MathJax.Hub.Register.StartupHook("MathMenu Ready", function () { MathJax.Menu.BGSTYLE["z-index"] = 2000; });
            MathJax.Hub.processSectionDelay = 0;
        }
    }
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML-full"></script>
<style>
    .btn {
        margin-left: 15px;
    }

    hr {
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>
<div class="page-head">
    <h3>Edit Question Paper</h3>
    <ol class="breadcrumb">
        <li>@Html.ActionLink("Home", "Dashboard", "Account")</li>
        <li>
            <a href="@Url.Action("Index", "QuestionPaper")" title="Question Paper">Question Paper</a>
        </li>
        <li class="active">Edit</li>
    </ol>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal block-flat">
        <div class="row">
            <div class="col-md-12">
                @Html.HiddenFor(model => model.Id)
                @Html.ValidationSummary(true)
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Name, new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "Name" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Minute, new { @class = "col-md-5" })
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.Minute, Model.Minutes, "Duration", new { @class = "form-control", @style = "width:auto" })
                    @Html.ValidationMessageFor(model => model.Minute)
                </div>
            </div>
            <div class="col-md-2">
                <button type="submit" name="command" value="Create" id="btnAdd" class="btn btn-success" title="Save">
                    <span class="fa fa-save"></span>
                </button>
                <a href="@Url.Action("Index", "QuestionPaper")" class="btn btn-primary" title="Back to List"><span class="fa fa-long-arrow-left"></span></a>
            </div>
        </div>
        <div class="row">
            <hr />
        </div>
        <div class="row">
            <table class="table table-responsive table-hover table-condensed table-bordered">
                <tr>
                    <th>
                        Question Id
                    </th>
                    <th>
                        Description
                    </th>
                    <th style="width: 20%">
                        Question Format
                    </th>
                </tr>
                @foreach (var item in Model.QuestionPaperMappings)
                    {
                    <tr>
                        <td>
                            @Html.Raw(@Html.DisplayFor(modelItem => item.QuestionBank.QuestionId))
                        </td>
                        <td>
                            @Html.Raw(@Html.DisplayFor(modelItem => item.QuestionBank.Decription))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.QuestionBank.QuestionFormat)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.QuestionBank.ExamName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.QuestionBank.Subject)
                            </td>*@
                    </tr>
                    }
            </table>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
