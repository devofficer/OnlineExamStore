@model PagedList.IPagedList<OnlineExam.Models.ViewModels.PendinQuestionViewModel>
@using PagedList.Mvc
@{
    ViewBag.Title = "System Question Bank Pending Request";
}

<div class="page-head">
    <h3>System Question Bank Pending Request</h3>
    <ol class="breadcrumb">
        <li>@Html.ActionLink("Home", "Dashboard", "Account")</li>
        <li class="active">System Question Bank Pending Request</li>
    </ol>
</div>


@using (Html.BeginForm("QuestionPendingList", "Teachers", FormMethod.Post, new { id = "frmSearch" }))
{
    <div class="form-horizontal block-flat">
        <div class="row">
            <div class="col-md-2" id="divSelectedClass">
                @Html.DropDownList("strClass", ViewBag.classTypes as SelectList, "Select Class", new { @class = "form-control" })
            </div>
            <div class="col-md-2" id="divSelectedCategory">
                <select name="strCategory" id="strCategory" class="form-control">
                    <option value="">Select Category</option>
                </select>
            </div>
            <div class="col-md-2" id="divSelectedSubject">
                <select name="strSubject" id="strSubject" class="form-control">
                    <option value="">Select Subject</option>
                </select>
            </div>
            <div class="col-md-2" id="divSelectedFormat">
                @Html.DropDownList("strFormat", ViewBag.questionFormats as SelectList, "Select Format", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                <button type="submit" name="command" value="Search" id="btnSearch" data-loading-text="Searching..." class="btn btn-success" title="Search">
                    <i class="fa fa-search"></i>Search
                </button>
                <button type="button" name="command" value="Refresh" id="btnRefresh" class="btn btn-warning" title="Refresh">
                    <i class="fa fa-refresh"></i>Refresh
                </button>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("SystemQuestionRequestUpdate", "Teachers", FormMethod.Post, new { id = "frmUpdate" }))
{
<div class="row" style="padding:5px 30px;">
    <input type="hidden" name="updateType" id="updateType" value="" />
    <input type="hidden" name="Ids" id="Ids" value="" />
    <button type="button" name="btnApprove" value="Approve" id="btnApprove" class="btn btn-success" title="Approve">
        <i class="fa fa-check-square"></i> Approve
    </button>
    <button type="button" name="btnReject" value="Reject" id="btnReject" class="btn btn-danger" title="Reject">
        <i class="fa-minus-square"></i> Reject
    </button>
</div>
}

        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-12 packs-container">
                    <table id="tblCustom" class="table table-condensed table-hover table-bordered table-responsive">
                        <thead>
                            <tr>
                                <th class="th-inner"></th>
                                <th class="th-inner"></th>
                                <th class="th-inner">Question Id</th>
                                <th class="th-inner">Description</th>
                                <th class="th-inner">Category</th>
                                <th class="th-inner">Subject</th>
                                <th class="th-inner">Request Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                string rowId = "Row_" + item.QuestionId.ToString();
                                <tr>
                                    <td style="text-align:center;"><a href="#" data-id="@item.QuestionId" class="detail-icon" title="Click to expan"><i style="font-weight:bold;font-size:16px;" class="glyphicon glyphicon-plus icon-plus"></i></a></td>
                                    <td style="text-align:center;"><input type="checkbox" name="chQuestion" class="chQuestionCss" value="@item.Id" /></td>
                                    <td>@item.QuestionId</td>
                                    <td>@Html.Raw(item.Description)</td>
                                    <td>@item.CategoryType</td>
                                    <td>@item.SubjectType</td>
                                    <td>@item.CreatedDate.ToString("yyyy-MM-dd H:mm:ss")</td>
                                </tr>
                                <tr id="@rowId" class="AnswerInfo" style="display:none;">
                                    <td colspan="7">
                                        <table>
                                            <tr>
                                                <th style="width:120px;">Description</th>
                                                <td>@Html.Raw(item.AnswerDescription)</td>
                                            </tr>
                                            <tr>
                                                <th>Option A</th>
                                                <td>@Html.Raw(item.OptionA)</td>
                                            </tr>
                                            <tr>
                                                <th>Option B</th>
                                                <td>@Html.Raw(item.OptionB)</td>
                                            </tr>
                                            <tr>
                                                <th>Option C</th>
                                                <td>@Html.Raw(item.OptionC)</td>
                                            </tr>
                                            <tr>
                                                <th>Option D</th>
                                                <td>@Html.Raw(item.OptionD)</td>
                                            </tr>
                                            <tr>
                                                <th>Option E</th>
                                                <td>@Html.Raw(item.OptionE)</td>
                                            </tr>
                                            <tr>
                                                <th>Answer Option</th>
                                                <td>@Html.Raw(item.AnswerOption)</td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div id="contentPager">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                        @Html.PagedListPager(Model, page => Url.Action("QuestionPendingList", "Teachers",
                    new { page, sortOrder = ViewBag.CurrentSort }))
                    </div>
                </div>

            </div>
        </div>

        <script type="text/javascript">
    $(".detail-icon").click(function () {
        var rowId = "Row_" + $(this).attr('data-id');
        if ($(this).parent().find('i').hasClass('icon-plus')) {
            $("#" + rowId).css('display', '');
            $(this).parent().find('i').removeClass('glyphicon-plus');
            $(this).parent().find('i').removeClass('icon-plus');
            $(this).parent().find('i').addClass('glyphicon-minus');
            $(this).parent().find('i').addClass('icon-minus');
        }
        else {
            $("#" + rowId).css('display', 'none');
            $(this).parent().find('i').removeClass('glyphicon-minus');
            $(this).parent().find('i').removeClass('icon-minus');
            $(this).parent().find('i').addClass('glyphicon-plus');
            $(this).parent().find('i').addClass('icon-plus');
        }
    });

    function getCategoryByClass(ClassType, Selected) {
        $('#strCategory').html('<option value="">Select Category</option>');
        $.getJSON('/Question/GetCategoriesByClassType/', { classType: ClassType },
            function (data) {
                debugger;
                var items = '<option value="">Select Category</option>';
                $.each(data, function (i, state) {
                    if (Selected != "" && Selected == state.Value) {
                        items += "<option value='" + state.Value + "' selected='selected'>" + state.Text + "</option>";
                    }
                    else {
                        items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                    }
                });
                $('#strCategory').html(items);
            }
        );
    }

    function getSubjectByCategory(CategoryType, Selected) {
        $('#strSubject').html('<option value="">Select Subject</option>');
        $.getJSON('/Question/GetSubjectsByCategoryType/', { categoryType: CategoryType },
            function (data) {
                var items = '<option value="">Select Subject</option>';
                $.each(data, function (i, state) {
                    if (Selected != "" && Selected == state.Value) {
                        items += "<option value='" + state.Value + "' selected='selected'>" + state.Text + "</option>";
                    }
                    else {
                        items += "<option value='" + state.Value + "'>" + state.Text + "</option>";
                    }
                });
                $('#strSubject').html(items);
            }
        );
    }

    $("#strClass").change(function () {
        getCategoryByClass($(this).val());
    });

    $("#strCategory").change(function () {
        getSubjectByCategory($(this).val());
    });

    $("#strClass").val("@ViewBag.strClass");

    var currentCategory = "@ViewBag.strCategory";
    var currentSubject = "@ViewBag.strSubject";

    getCategoryByClass("@ViewBag.strClass", currentCategory);
    getSubjectByCategory("@ViewBag.strCategory", currentSubject);

    $("#btnRefresh").click(function () {
        $("#strClass").val('');
        $('#strCategory').html('<option value="">Select Category</option>');
        $('#strSubject').html('<option value="">Select Subject</option>');
        $("#strFormat").val('');
        $("#frmSearch").submit();
    });

            $(".chQuestionCss").click(function () {
                var slectedIds = '';
                if ($(this).is(":checked")) {
                    if (slectedIds == '') {
                        slectedIds = $(this).val();
                    }
                    else {
                        slectedIds += "," + $(this).val();
                    }
                }
                $("#Ids").val(slectedIds);
            });

            $("#btnApprove").click(function () {
                var slectedIds = $("#Ids").val();
                if (slectedIds == '') {
                    alert("Please select one or more questions..");
                }
                else {
                    if (confirm("Are you sure to approve selected questions?")) {
                        $("#updateType").val('Approve');
                        $("#frmUpdate").submit();
                    }
                }
            });

            $("#btnReject").click(function () {
                var slectedIds = $("#Ids").val();
                if (slectedIds == '') {
                    alert("Please select one or more questions..");
                }
                else {
                    if (confirm("Are you sure to reject selected questions?")) {
                        $("#updateType").val('Reject');
                        $("#frmUpdate").submit();
                    }
                }
            });



        </script>
